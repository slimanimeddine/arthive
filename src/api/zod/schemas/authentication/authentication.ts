/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * ArtHive API Documentation
 * ArtHive API Documentation
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from 'zod'

/**
 * Creates a new user
 * @summary Sign Up
 */
export const signUpBody = zod.object({
  username: zod.string(),
  email: zod.string(),
  password: zod.string(),
})

export const signUpResponse = zod.object({
  message: zod.string().optional(),
  data: zod
    .object({
      id: zod.number().optional(),
    })
    .optional(),
  status: zod.number().optional(),
})

/**
 * Signs in a user and returns an auth token
 * @summary Sign In
 */
export const signInBody = zod.object({
  email: zod.string(),
  password: zod.string(),
})

export const signInResponse = zod.object({
  message: zod.string().optional(),
  data: zod
    .object({
      token: zod.string().optional(),
      id: zod.number().optional(),
    })
    .optional(),
  status: zod.number().optional(),
})

/**
 * Signs out a user and deletes the auth token
 * @summary Sign Out
 */
export const signOutResponse = zod.object({
  message: zod.string().optional(),
  data: zod.string().optional(),
  status: zod.number().optional(),
})

/**
 * Verifies the email of the authenticated user
 * @summary Verify Email
 */
export const verifyEmailResponse = zod.object({
  message: zod.string().optional(),
  data: zod.string().optional(),
  status: zod.number().optional(),
})

/**
 * Resends the verification email to the authenticated user
 * @summary Resend Verification Email
 */
export const resendVerificationEmailResponse = zod.object({
  message: zod.string().optional(),
  data: zod.string().optional(),
  status: zod.number().optional(),
})

/**
 * Sends a reset password link to the user's email
 * @summary Send Reset Password Link
 */
export const sendResetPasswordLinkBody = zod.object({
  email: zod.string(),
})

export const sendResetPasswordLinkResponse = zod.object({
  message: zod.string().optional(),
  data: zod
    .object({
      status: zod.string().optional(),
    })
    .optional(),
  status: zod.number().optional(),
})

/**
 * Resets the password of the user
 * @summary Reset Password
 */
export const resetPasswordBody = zod.object({
  token: zod.string(),
  email: zod.string(),
  password: zod.string(),
})

export const resetPasswordResponse = zod.object({
  message: zod.string().optional(),
  data: zod
    .object({
      status: zod.string().optional(),
    })
    .optional(),
  status: zod.number().optional(),
})

/**
 * Changes the password of the authenticated user
 * @summary Change Password
 */
export const changePasswordBody = zod.object({
  current_password: zod.string(),
  new_password: zod.string(),
})

export const changePasswordResponse = zod.object({
  message: zod.string().optional(),
  data: zod.string().optional(),
  status: zod.number().optional(),
})

/**
 * Signs in an admin user and returns an auth token
 * @summary Admin Sign In
 */
export const adminSignInBody = zod.object({
  email: zod.string(),
  password: zod.string(),
})

export const adminSignInResponse = zod.object({
  message: zod.string().optional(),
  data: zod
    .object({
      token: zod.string().optional(),
      id: zod.number().optional(),
    })
    .optional(),
  status: zod.number().optional(),
})
