/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * ArtHive API Documentation
 * ArtHive API Documentation
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from 'zod'

/**
 * Retrieve a list of users following the currently authenticated user
 * @summary List Authenticated User Followers
 */
export const listAuthenticatedUserFollowersResponse = zod.object({
  data: zod
    .array(
      zod.object({
        id: zod.number().optional(),
        username: zod.string().optional(),
        first_name: zod.string().optional(),
        last_name: zod.string().optional(),
        email: zod.string().optional(),
        country: zod.string().optional(),
        bio: zod.string().optional(),
        photo: zod.string().optional(),
        artist_verified_at: zod.string().optional(),
        email_verified_at: zod.string().optional(),
        role: zod.string().optional(),
        created_at: zod.string().optional(),
        updated_at: zod.string().optional(),
      })
    )
    .optional(),
})

/**
 * Retrieve a list of users followed by the currently authenticated user
 * @summary List Authenticated User Following
 */
export const listAuthenticatedUserFollowingResponse = zod.object({
  data: zod
    .array(
      zod.object({
        id: zod.number().optional(),
        username: zod.string().optional(),
        first_name: zod.string().optional(),
        last_name: zod.string().optional(),
        email: zod.string().optional(),
        country: zod.string().optional(),
        bio: zod.string().optional(),
        photo: zod.string().optional(),
        artist_verified_at: zod.string().optional(),
        email_verified_at: zod.string().optional(),
        role: zod.string().optional(),
        created_at: zod.string().optional(),
        updated_at: zod.string().optional(),
      })
    )
    .optional(),
})

/**
 * Follow a user
 * @summary Follow User
 */
export const followUserResponse = zod.object({
  data: zod
    .object({
      id: zod.number().optional(),
      follower_id: zod.number().optional(),
      followed_id: zod.number().optional(),
      created_at: zod.string().optional(),
      updated_at: zod.string().optional(),
    })
    .optional(),
})

/**
 * Check if the currently authenticated user is following a user
 * @summary Check if Authenticated User is Following
 */
export const checkIfAuthenticatedUserIsFollowingResponse = zod.object({
  message: zod.string().optional(),
  data: zod.boolean().optional(),
  status: zod.number().optional(),
})
